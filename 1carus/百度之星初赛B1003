#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#define endl '\n'
#define max(a,b) (a > b ? a : b)
#define min(a,b) (a > b ? b : a)

using namespace std;

typedef long long LL;
#define MOD 1e9 + 7

typedef struct Node
{
    LL exp_mod(LL a, LL b, LL p)
    {
        LL res = 1;
        while(b != 0)
        {
            if(b&1) res = (res * a) % p;
            a = (a*a) % p;
            b >>= 1;
        }
        return res;
    }
    LL Comb(LL a, LL b, LL p)
    {
        if(a < b)   return 0;
        if(a == b)  return 1;
        if(b > a - b)   b = a - b;

        LL ans = 1, ca = 1, cb = 1;
        for(LL i = 0; i < b; ++i)
        {
            ca = (ca * (a - i))%p;
            cb = (cb * (b - i))%p;
        }
        ans = (ca*exp_mod(cb, p - 2, p)) % p;
        return ans;
    }
    LL lucas(int n, int m, int p)
    {
        LL ans = 1;
        while(n&&m&&ans)
        {
            ans = (ans*Comb(n%p, m%p, p)) % p;
            n /= p;
            m /= p;
        }
        return ans;
    }
}Lucas;

int n,m; 

int main()
{
    Lucas Lu;
    while(scanf("%d %d",&n,&m) == 2)
    {
        cout << Lu.lucas(n+m-3-1,m-1-1,MOD) << endl;
    }
    return 0;
}
