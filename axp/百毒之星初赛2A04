/* ***********************************************
Author        :axp
Created Time  :2016/5/25 16:44:21
TASK		  :4.cpp
LANG          :C++
************************************************ */

#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;

typedef long long ll;
const int N = 305;
int ar[N];
int dx[N];
int n,m;
bool dp[N][N];
bool vis[N][N];
int kase;
int T;
bool c[N][N];
int ans[N];

int f(int,int);

int g(ll x,int l,int r)
{
	int re=0;
	if(ar[l]==x)re=max(re,3+f(l+1,r));
	if(c[l+1][l+2]==0)return re;
	for(int i=l+2;i<=r;i++)
	{
		if(ar[i]==x)re=max(re,i-l+f(i+1,r));
		if(f(l+1,i)!=i-l)return re;
	}
	return re;
}

int f(int l,int r)
{
	bool &re=dp[l][r];
	if(vis[l][r])return re;
	vis[l][r]=1;
	re=0;
	if(r>n)return re=0;
	if(l==r)return re=0;
	if(l+1==r)return re=c[l][r];
	if(c[l][r])re|=f(l+1,r-1);
	for(int i=l;i<r;i++)
	{
		if(c[l][i] && ar[r]-ar[i]==ar[i]-ar[l])
			if((i==l+1 || f(l+1,i-1)) && (i==r-1 || f(i+1,r-1)))
				return re=1;
		if(f(l,i)&&f(i+1,r))return re=1;
	}
	return re;
}

int solve(int x)
{
	int &re=ans[x];
	if(re!=-1)return re;
	if(x>=n)return re=0;
	re=0;
	for(int i=x;i<=n;i++)
		re=max(re,f(x,i)*(i-x+1)+solve(i+1));
	return re;
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    scanf("%d",&T);
	for(kase=1;kase<=T;kase++)
	{
		scanf("%d%d",&n,&m);
		for(int i=1;i<=n;i++)
			scanf("%d",&ar[i]);
		memset(c,0,sizeof c);
		memset(vis,0,sizeof vis);
		memset(ans,-1,sizeof ans);
		for(int i=1;i<=m;i++)
		{
			scanf("%d",&dx[i]);
			for(int x=1;x<=n;x++)
				for(int y=x+1;y<=n;y++)
					c[x][y]|=(ar[y]-ar[x])==dx[i];
		}
		printf("%d\n",solve(1));
	}
    return 0;
}
