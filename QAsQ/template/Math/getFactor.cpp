/*
    O(sqrt(n))
    factor[][0] is prime factor
    factor[][1] is factor generated by this prime
    factor[][2] is factor counter
    Need prime Sieve
*/

int factor[100][3],facCnt;
int getFactors(int x){
    facCnt = 0;
    int tem = x;
    for(int i = 1; prime[i] <= tem / prime[i]; i++){
        factor[facCnt][1] = 1,factor[facCnt][2] = 0;
        if(tem % prime[i] == 0)
            factor[facCnt][0] = prime[i];
        while(tem % prime[i] == 0){
            factor[facCnt][2]++;
            factor[facCnt][1] *= prime[i];
            tem /=prime[i];
        }
        if(factor[facCnt][1] > 1) facCnt++;
    }
    if(tem != 1){
        factor[facCnt][0] = tem;
        factor[facCnt][1] = tem, factor[facCnt++][2] = 1;
    }
    return facCnt;
}
